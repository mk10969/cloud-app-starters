apply plugin: 'org.springframework.boot'
apply plugin: 'com.google.cloud.tools.jib'

// spring-boot-configuration-processor
compileJava.dependsOn(processResources)


dependencies {
    implementation project(':uma-cloud-common')
//    implementation 'org.springframework.boot:spring-boot-starter-rsocket'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

    // https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-configuration-metadata.html#configuration-metadata-annotation-processor
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


//    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.cloud:spring-cloud-stream-test-support'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}


jib {
    from {
        image = 'openjdk:11-jre-slim'
    }
    to {
        image = "mk10969/my-app:${project.version}"
    }
    container {
        creationTime = 'USE_CURRENT_TIMESTAMP'
    }
}


ext {
    metadataJson = file("${buildDir}/classes/java/main/META-INF/spring-configuration-metadata.json")
    metadataProperties = file("${buildDir}/resources/main/META-INF/spring-configuration-metadata-whitelist.properties")
}


task copyMetadata(type: Copy) {
    from "${metadataJson}", "${metadataProperties}"
    into "${buildDir}/metadata/tmp/META-INF"
}


task metadata(type: Zip) {
    baseName = project.name
    extension = "jar"
    from "${buildDir}/metadata/tmp/"
    destinationDir = file("${buildDir}/metadata")
}
