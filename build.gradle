plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'maven-publish'
    id 'com.google.cloud.tools.jib' version '2.1.0'
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
    }
}

subprojects {
    group = 'org.uma.cloud'
    version = '0.1.10-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: "maven-publish"
    apply plugin: 'io.spring.dependency-management'

    configurations {
        testImplementation.extendsFrom compileOnly
        testAnnotationProcessor.extendsFrom annotationProcessor
    }

    dependencies {
        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-configuration-metadata.html#configuration-metadata-annotation-processor
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

        // Health Check
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
//        implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'

        // library
        implementation 'com.google.guava:guava:28.1-jre'

        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    test {
        useJUnitPlatform()
    }

    task copyMetadata(type: Copy, dependsOn: build) {
        from file("${buildDir}/classes/java/main/META-INF/spring-configuration-metadata.json"),
                file("${buildDir}/resources/main/META-INF/spring-configuration-metadata-whitelist.properties")
        into "${buildDir}/metadata/tmp/META-INF"
    }

    task metadata(type: Zip, dependsOn: copyMetadata) {
        baseName = project.name
        extension = "jar"
        from "${buildDir}/metadata/tmp/"
        destinationDir = file("${buildDir}/metadata")
    }

    publishing {
        repositories {
            maven {
                url "${buildDir}/once"
            }
        }
        // お試し
//        repositories {
//            maven {
//                name = "GitHubPackages"
//                url = uri("https://maven.pkg.github.com/mk10969/uma-cloud-app-starters")
//                credentials {
//                    username = project.findProperty("GITHUB_USER") as String ?: System.getenv("GITHUB_USER")
//                    password = project.findProperty("GITHUB_TOKEN") as String ?: System.getenv("GITHUB_TOKEN")
//                }
//            }
//        }
        publications {
            metaJar(MavenPublication) {
                artifact source: metadata, extension: 'jar'
            }
        }
    }


    // spring-boot-configuration-processor
    compileJava.dependsOn(processResources)
    compileJava.options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

}