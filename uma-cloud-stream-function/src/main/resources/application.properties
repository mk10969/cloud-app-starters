spring.profiles.active=local

### schema for app data ###
spring.app.datasource.driver-class-name=org.postgresql.Driver
spring.app.datasource.jdbc-url=jdbc:postgresql://localhost:5432/postgres
spring.app.datasource.username=postgres
spring.app.datasource.password=secret

### spring jpa ###
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true

### spring cloud steam ###
spring.cloud.stream.function.definition=JvWatchEventIdScatter;\
  eventToRacingChange;\
  eventToRacingRefund;\
  raceIdToBusinessRacing;\
  raceIdToBusinessRacingHorse;\
  raceIdToExacta;\
  raceIdToQuinella;\
  raceIdToQuinellaPlace;\
  raceIdToWinsShowBracketQ;\
  subscribe;\
  subscribe2;\
  dynamicRaceId
### dynamicRaceId -> business racing update -> business racingHorse update -> subscribe:  pipeline
spring.cloud.stream.bindings.dynamicRaceId-out-0.destination=dynamicRaceId
spring.cloud.stream.bindings.raceIdToBusinessRacing-in-0.destination=dynamicRaceId
spring.cloud.stream.bindings.raceIdToBusinessRacing-out-0.destination=updatedRacing
spring.cloud.stream.bindings.raceIdToBusinessRacingHorse-in-0.destination=updatedRacing
spring.cloud.stream.bindings.raceIdToBusinessRacingHorse-out-0.destination=updatedRacingHorse
spring.cloud.stream.bindings.subscribe-in-1.destination=updatedRacingHorse
### event notification -> racing update -> subscribe: pipeline
spring.cloud.stream.bindings.JvWatchEventId-out-0.destination=eventId
spring.cloud.stream.bindings.JvWatchEventIdScatter-in-0.destination=eventId
spring.cloud.stream.bindings.JvWatchEventIdScatter-out-0.destination=aaaaa
spring.cloud.stream.bindings.JvWatchEventIdScatter-out-1.destination=bbbbb
spring.cloud.stream.bindings.eventToRacingRefund-in-0.destination=aaaaa
spring.cloud.stream.bindings.eventToRacingChange-in-0.destination=aaaaa
spring.cloud.stream.bindings.eventToRacingRefund-out-0.destination=fixedRefund
spring.cloud.stream.bindings.eventToRacingChange-out-0.destination=changedRacing
spring.cloud.stream.bindings.subscribe-in-0.destination=fixedRefund
spring.cloud.stream.bindings.subscribe2-in-0.destination=changedRacing


### poller raceId
#spring.cloud.stream.bindings.pollerRaceId-out-0.destination=pollerRaceId
#spring.cloud.stream.bindings.raceIdToWinsShowBracketQ|subscribe-in-0.destination=pollerRaceId
#spring.cloud.stream.bindings.raceIdToQuinella|subscribe-in-0.destination=pollerRaceId
#spring.cloud.stream.bindings.raceIdToQuinellaPlace|subscribe-in-0.destination=pollerRaceId
#spring.cloud.stream.bindings.raceIdToExacta|subscribe-in-0.destination=pollerRaceId
### JvWatchEventId
#spring.cloud.stream.bindings.JvWatchEventId-out-0.destination=eventId
#spring.cloud.stream.bindings.JvWatchEventIdScatter-in-0.destination=eventId
#spring.cloud.stream.bindings.JvWatchEventIdScatter-out-0.destination=event0
#spring.cloud.stream.bindings.JvWatchEventIdScatter-out-1.destination=event1
#spring.cloud.stream.bindings.eventToRacingRefund-in-0.destination=event0
#spring.cloud.stream.bindings.eventToRacingRefund-out-0.destination=event0raceId
#spring.cloud.stream.bindings.raceIdToBusinessRacing|subscribe-in-0.destination=event0raceId
#spring.cloud.stream.bindings.raceIdToBusinessRacingHorse|subscribe-in-0.destination=event0raceId
#spring.cloud.stream.bindings.eventSubscribe-in-0.destination=event1
### @PollableBean => interval ###
spring.cloud.stream.poller.fixedDelay=240000
